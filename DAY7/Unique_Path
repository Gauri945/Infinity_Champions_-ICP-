class Solution {
    public int uniquePaths(int m, int n) {
        // Start  (0,0)
        return countPaths(0,0,m,n);
    }
class Solution {
    public int uniquePaths(int m, int n) {
        // Start  (0,0)
        return countPaths(0,0,m,n);
    }

    //  (i,j) to bottom-right
    private int countPaths(int i, int j, int m, int n) {
        // reached bottom-right
        if (i ==m-1 && j==n-1) return 1;

        // Out of bounds
        if (i >=m || j>=n) return 0;

        // Move down + move right
        return countPaths(i+1,j,m,n) + countPaths(i,j+1,m,n);
    }
}

 